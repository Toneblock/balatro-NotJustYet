[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# prevent chip total from triggering end of round
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if G.GAME.chips - G.GAME.blind.chips >= 0 or G.GAME.current_round.hands_left < 1 then"
position = "at"
payload = '''
if not to_big then
	function to_big(x) return x end
end
if (G.GAME.current_round.hands_left <= 0 and to_big(self.GAME.chips) < to_big(self.GAME.blind.chips)) or (GLOBAL_njy_vanilla_override and to_big(self.GAME.chips) >= to_big(self.GAME.blind.chips)) then
	stop_use()
'''
match_indent = true

# talisman override (janky)
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if Big:new(G.GAME.chips) >= Big:new(G.GAME.blind.chips) or G.GAME.current_round.hands_left < 1 then"
position = "at"
payload = '''
if not to_big then
	function to_big(x) return x end
end
if (G.GAME.current_round.hands_left <= 0 and to_big(self.GAME.chips) < to_big(self.GAME.blind.chips)) or (GLOBAL_njy_vanilla_override and to_big(self.GAME.chips) >= to_big(self.GAME.blind.chips)) then
	stop_use()
'''
match_indent = true

# lobcorp override
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if to_big(G.GAME.chips) >= to_big(G.GAME.blind.chips) or G.GAME.current_round.hands_left <= 0 then"
position = "at"
payload = '''
if not to_big then
	function to_big(x) return x end
end
if (G.GAME.current_round.hands_left <= 0 and to_big(self.GAME.chips) < to_big(self.GAME.blind.chips)) or (GLOBAL_njy_vanilla_override and to_big(self.GAME.chips) >= to_big(self.GAME.blind.chips)) then
	stop_use()
'''
match_indent = true

# prevent a dumbass bug by preventing a piece of code from running? why does this run?? thunk????
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if #G.hand.cards < 1 and #G.deck.cards < 1 and #G.play.cards < 1 then"
position = "at"
payload = '''
if not true then
'''
match_indent = true

# add button
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''G.SETTINGS.play_button_pos == 1 and play_button or discard_button,'''
position = "after"
payload = '''
{n=G.UIT.C, config={id = 'njy_end_button',align = "tm", padding = 0.3, r = 0.1, minw = 1.3, minh = button_height, hover = true, colour = G.C.GREEN, button = "njy_attempt_endround", one_press = true, shadow = true, func = 'njy_can_endround'}, nodes={
      {n=G.UIT.R, config={align = "cm", padding = 0}, nodes={
        {n=G.UIT.T, config={text = "End", scale = text_scale, colour = G.C.UI.TEXT_LIGHT, focus_args = {button = 'y', orientation = 'bm'}, func = 'set_button_pip'}}
      }}
    }},
'''
match_indent = true

# move buttons to correct position
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''config = {align="bm", offset = {x=0,y=0.3},major = G.hand, bond = 'Weak'}'''
position = "at"
payload = '''
config = {align="bm", offset = {x=0.65,y=0.3},major = G.hand, bond = 'Weak'}
'''
match_indent = true

# i TRIED to change this but nothing works??????????????????? code looks bad but genuinely, just doing "self.C.CHIPS_REQUIRED = {0.2941,0.76,0.5725,1}" doesn't work, pls explain
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "self.C.DARK_EDITION[2] = math.min(self.C.DARK_EDITION[3], self.C.DARK_EDITION[1])"
position = "after"
payload = '''
	local njy_red = self.C.RED
	local njy_green = self.C[G.njy_colour]
	if self.GAME and self.GAME.chips and self.GAME.blind and self.GAME.blind.chips then
		if not to_big then
			function to_big(x) return x end
		end
		if to_big(self.GAME.chips) >= to_big(self.GAME.blind.chips) then
			self.C.CHIPS_REQUIRED[1] = njy_green[1]
			self.C.CHIPS_REQUIRED[2] = njy_green[2]
			self.C.CHIPS_REQUIRED[3] = njy_green[3]
		else
			self.C.CHIPS_REQUIRED[1] = njy_red[1]
			self.C.CHIPS_REQUIRED[2] = njy_red[2]
			self.C.CHIPS_REQUIRED[3] = njy_red[3]
		end
	else
		self.C.CHIPS_REQUIRED[1] = njy_red[1]
		self.C.CHIPS_REQUIRED[2] = njy_red[2]
		self.C.CHIPS_REQUIRED[3] = njy_red[3]
	end
'''
match_indent = true

# change colour of chips required in UI_def (makes chip total green if requirement is met)
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "{n=G.UIT.T, config={ref_table = G.GAME.blind, ref_value = 'chip_text', scale = 0.001, colour = G.C.RED, shadow = true, id = 'HUD_blind_count', func = 'blind_chip_UI_scale'}}"
position = "at"
payload = '''
{n=G.UIT.T, config={ref_table = G.GAME.blind, ref_value = 'chip_text', scale = 0.001, colour = G.C.CHIPS_REQUIRED, shadow = true, id = 'HUD_blind_count', func = 'blind_chip_UI_scale'}}
'''
match_indent = true

# change colour of chips in cashout screen for parity
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "{n=G.UIT.T, config={text = G.GAME.blind.chip_text, scale = scale_number(G.GAME.blind.chips, scale, 100000), colour = G.C.RED, shadow = true}}"
position = "at"
payload = '''
{n=G.UIT.T, config={text = G.GAME.blind.chip_text, scale = scale_number(G.GAME.blind.chips, scale, 100000), colour = G.C[G.njy_colour], shadow = true}}
'''
match_indent = true

# insert new colour into globals.lua
[[patches]]
[patches.pattern]
target = "globals.lua"
pattern = "self.keybind_mapping = {{"
position = "before"
payload = '''
self.C.CHIPS_REQUIRED = {0, 0, 0, 1}
'''
match_indent = true

# add keybind for ending round
[[patches]]
[patches.pattern]
target = "engine/controller.lua"
pattern = "function Controller:key_press_update(key, dt)"
position = "after"
payload = '''
if key == G.njy_keybind then
	GLOBAL_njy_vanilla_override = true
	if G.STATE_COMPLETE == true and G.buttons and G.buttons.states and G.buttons.states.visible and G.buttons.states.visible == true and G.GAME and G.GAME.chips and G.GAME.blind and G.GAME.blind.chips then
		if not to_big then
			function to_big(x) return x end
		end
		if to_big(G.GAME.chips) >= to_big(G.GAME.blind.chips) then
			G.FUNCS.njy_attempt_endround()	-- idk what to put in this function man
		end
	end
end
'''
match_indent = true

# this is dumb and i should not be doing this
[[patches]]
[patches.pattern]
target = "engine/controller.lua"
pattern = '''if key == "a" and self.held_keys["g"] and not _RELEASE_MODE then'''
position = "before"
payload = '''
if key == G.njy_keybind then
	GLOBAL_njy_vanilla_override = nil
end
'''
match_indent = true

# prevents double-end attempts
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''if #G.hand.cards < 1 and #G.deck.cards < 1 then'''
position = "after"
payload = '''
	G.FUNCS.njy_attempt_endround()
end
if not true then
'''
match_indent = true
